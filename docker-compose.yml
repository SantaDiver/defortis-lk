version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx01
    ports:
      - "80:8000"
      - "443:443"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./config/certs:/etc/nginx/ssl
      - ./static:/static
    depends_on:
      - web
    restart: unless-stopped

  # Redis - result backend
  redis:
    image: redis:2.8.19
    hostname: redis
    restart: unless-stopped

  # RabbitMQ - queue
  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "5672:5672"
      - "15672:15672"  # here, we can access rabbitmq management plugin
    restart: unless-stopped

  db:
    image: postgres
    volumes:
        - postgres:/var/lib/postgresql/data
    restart: unless-stopped

  web:
    build: .
    container_name: dj01
    hostname: web
    command: bash -c "
        mkdir -p logs
        && python manage.py migrate
        && python manage.py collectstatic --noinput
        && gunicorn dflk.wsgi:application --bind 0.0.0.0:8000 --reload"
    volumes:
      - .:/code
      - ./static:/static
    expose:
      - "8000"
      - "443"
    depends_on:
      - db
    links:
      - rabbit
      - redis
    restart: unless-stopped

  # Celery worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A dflk worker -l info
    volumes:
      - .:/code
    links:
      - rabbit
      - redis
    depends_on:
      - rabbit
    restart: unless-stopped

  # Celery beat
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A dflk beat -l info
    volumes:
      - .:/code
    links:
      - rabbit
      - redis
    depends_on:
      - rabbit
    restart: unless-stopped

volumes:
    postgres:
